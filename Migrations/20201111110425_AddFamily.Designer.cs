// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using alone_mysql_dc_comics.Data;

namespace alone_mysql_dc_comics.Migrations
{
    [DbContext(typeof(DcDbContext))]
    [Migration("20201111110425_AddFamily")]
    partial class AddFamily
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("alone_mysql_dc_comics.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodeName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Origin")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("alone_mysql_dc_comics.Models.Family", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("FatherName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MotherName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Relationship")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("child")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("FamilyId");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Families");
                });

            modelBuilder.Entity("alone_mysql_dc_comics.Models.Family", b =>
                {
                    b.HasOne("alone_mysql_dc_comics.Models.Character", "Character")
                        .WithOne("Family")
                        .HasForeignKey("alone_mysql_dc_comics.Models.Family", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
